import logging
from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext

from keyboards.inline import get_main_menu, get_categories_menu
from services.api_client import meal_api
from storage.data_manager import add_user, get_favorites, get_menu
from utils.formatters import format_recipe, format_favorites_list
from states.recipe_states import RecipeStates

logger = logging.getLogger(__name__)
router = Router()

@router.message(Command('start'))
async def cmd_start(message: Message):
    """–∫–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç"""
    logger.info(f"–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")
    
    # –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await add_user(message.from_user.id, message.from_user.username)
    
    text = f"üëã –ø—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!\n\n"
    text += "üçΩ —è —Ç–≤–æ–π –∫—É–ª–∏–Ω–∞—Ä–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫!\n"
    text += "–ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ —Ä–µ—Ü–µ–ø—Ç—ã, —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–±—Ä–∞–Ω–Ω–æ–µ –∏ —Å–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –º–µ–Ω—é\n\n"
    text += "–≤—ã–±–µ—Ä–∏ —á—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å:"
    
    await message.answer(text, reply_markup=get_main_menu())

@router.message(Command('help'))
async def cmd_help(message: Message):
    """–∫–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ—â—å"""
    text = "üÜò <b>–ø–æ–º–æ—â—å –ø–æ –±–æ—Ç—É:</b>\n\n"
    text += "/start - –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞\n"
    text += "/help - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n"
    text += "/search - –ø–æ–∏—Å–∫ —Ä–µ—Ü–µ–ø—Ç–æ–≤\n"
    text += "/favorites - –∏–∑–±—Ä–∞–Ω–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã\n"
    text += "/menu - –º–µ–Ω—é –Ω–∞ –Ω–µ–¥–µ–ª—é\n\n"
    text += "üîç <b>–ø–æ–∏—Å–∫:</b> –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞\n"
    text += "‚≠ê <b>–∏–∑–±—Ä–∞–Ω–Ω–æ–µ:</b> —Å–æ—Ö—Ä–∞–Ω—è–π –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏–µ—Å—è —Ä–µ—Ü–µ–ø—Ç—ã\n"
    text += "üìÖ <b>–º–µ–Ω—é:</b> –ø–ª–∞–Ω–∏—Ä—É–π –ø–∏—Ç–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é"
    
    await message.answer(text, reply_markup=get_main_menu())

@router.message(Command('search'))
async def cmd_search(message: Message, state: FSMContext):
    """–∫–æ–º–∞–Ω–¥–∞ –ø–æ–∏—Å–∫"""
    await state.set_state(RecipeStates.waiting_search)
    text = "üîç –Ω–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞:\n\n"
    text += "üí° <b>–ø–æ–¥—Å–∫–∞–∑–∫–∞:</b> –ª—É—á—à–µ –∏—Å–∫–∞—Ç—å –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º\n"
    text += "–Ω–∞–ø—Ä–∏–º–µ—Ä: pasta, pizza, chicken, beef, fish, cake\n"
    text += "–∏–ª–∏ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –±–ª—é–¥–∞: carbonara, lasagna, risotto"
    await message.answer(text)

@router.message(Command('favorites'))
async def cmd_favorites(message: Message):
    """–∫–æ–º–∞–Ω–¥–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ"""
    favorites = await get_favorites(message.from_user.id)
    
    if not favorites:
        text = "ü§∑‚Äç‚ôÄÔ∏è —É –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤\n\n–Ω–∞–π–¥–∏—Ç–µ —Ä–µ—Ü–µ–ø—Ç –∏ –¥–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ!"
        await message.answer(text, reply_markup=get_main_menu())
    else:
        text = "‚≠ê <b>–≤–∞—à–∏ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã:</b>\n\n"
        text += "–≤—ã–±–µ—Ä–∏—Ç–µ —Ä–µ—Ü–µ–ø—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:"
        from keyboards.inline import get_favorites_menu
        kb = get_favorites_menu(favorites)
        await message.answer(text, reply_markup=kb)

@router.message(Command('menu'))
async def cmd_menu(message: Message):
    """–∫–æ–º–∞–Ω–¥–∞ –º–µ–Ω—é"""
    menu = await get_menu(message.from_user.id)
    
    if not menu:
        text = "üìÖ <b>–≤–∞—à–µ –º–µ–Ω—é –ø—É—Å—Ç–æ</b>\n\n"
        text += "–¥–æ–±–∞–≤—å—Ç–µ —Ä–µ—Ü–µ–ø—Ç—ã —á–µ—Ä–µ–∑ –ø–æ–∏—Å–∫!"
    else:
        text = "üìÖ <b>–≤–∞—à–µ –º–µ–Ω—é –Ω–∞ –Ω–µ–¥–µ–ª—é:</b>\n\n"
        days = ['–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–≤—Ç–æ—Ä–Ω–∏–∫', '—Å—Ä–µ–¥–∞', '—á–µ—Ç–≤–µ—Ä–≥', '–ø—è—Ç–Ω–∏—Ü–∞', '—Å—É–±–±–æ—Ç–∞', '–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ']
        
        for day in days:
            if day in menu:
                recipe = menu[day]
                text += f"üóì {day}: {recipe['name']}\n"
            else:
                text += f"üóì {day}: –Ω–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ\n"
    
    await message.answer(text, reply_markup=get_main_menu())

# –∫–æ–ª–±—ç–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
@router.callback_query(F.data == "search_recipes")
async def cb_search(callback: CallbackQuery, state: FSMContext):
    await state.set_state(RecipeStates.waiting_search)
    text = "üîç –Ω–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞:\n\n"
    text += "üí° <b>–ø–æ–¥—Å–∫–∞–∑–∫–∞:</b> –ª—É—á—à–µ –∏—Å–∫–∞—Ç—å –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º\n"
    text += "–Ω–∞–ø—Ä–∏–º–µ—Ä: pasta, pizza, chicken, beef, fish, cake"
    await callback.message.edit_text(text)
    await callback.answer()

@router.callback_query(F.data == "random_recipe")
async def cb_random(callback: CallbackQuery):
    await callback.message.edit_text("üé≤ –∏—â—É —Å–ª—É—á–∞–π–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç...")
    
    recipe = await meal_api.get_random_meal()
    if recipe:
        text = format_recipe(recipe)
        from keyboards.inline import get_recipe_actions
        from storage.data_manager import is_favorite
        
        # —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ—Ü–µ–ø—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_id = callback.from_user.id
        from routers.handlers.recipe_handlers import user_recipes
        user_recipes[user_id] = recipe
        
        is_fav = await is_favorite(user_id, recipe['idMeal'])
        kb = get_recipe_actions(recipe['idMeal'], is_fav)
        
        await callback.message.edit_text(text, reply_markup=kb)
    else:
        await callback.message.edit_text("üòî –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ä–µ—Ü–µ–ø—Ç", reply_markup=get_main_menu())
    
    await callback.answer()

@router.callback_query(F.data == "show_favorites")
async def cb_favorites(callback: CallbackQuery):
    favorites = await get_favorites(callback.from_user.id)
    
    if not favorites:
        text = "ü§∑‚Äç‚ôÄÔ∏è —É –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤\n\n–Ω–∞–π–¥–∏—Ç–µ —Ä–µ—Ü–µ–ø—Ç –∏ –¥–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ!"
        await callback.message.edit_text(text, reply_markup=get_main_menu())
    else:
        text = "‚≠ê <b>–≤–∞—à–∏ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã:</b>\n\n"
        text += "–≤—ã–±–µ—Ä–∏—Ç–µ —Ä–µ—Ü–µ–ø—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:"
        from keyboards.inline import get_favorites_menu
        kb = get_favorites_menu(favorites)
        await callback.message.edit_text(text, reply_markup=kb)
    
    await callback.answer()

@router.callback_query(F.data == "weekly_menu")
async def cb_menu(callback: CallbackQuery):
    menu = await get_menu(callback.from_user.id)
    
    if not menu:
        text = "üìÖ <b>–≤–∞—à–µ –º–µ–Ω—é –ø—É—Å—Ç–æ</b>\n\n–¥–æ–±–∞–≤—å—Ç–µ —Ä–µ—Ü–µ–ø—Ç—ã —á–µ—Ä–µ–∑ –ø–æ–∏—Å–∫!"
    else:
        text = "üìÖ <b>–≤–∞—à–µ –º–µ–Ω—é:</b>\n\n"
        days = ['–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–≤—Ç–æ—Ä–Ω–∏–∫', '—Å—Ä–µ–¥–∞', '—á–µ—Ç–≤–µ—Ä–≥', '–ø—è—Ç–Ω–∏—Ü–∞', '—Å—É–±–±–æ—Ç–∞', '–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ']
        for day in days:
            if day in menu:
                recipe = menu[day]
                text += f"üóì {day}: {recipe['name']}\n"
            else:
                text += f"üóì {day}: –Ω–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ\n"
    
    await callback.message.edit_text(text, reply_markup=get_main_menu())
    await callback.answer()

@router.callback_query(F.data == "back_to_menu")
async def cb_back(callback: CallbackQuery):
    text = "üçΩ <b>–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>\n\n–≤—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:"
    await callback.message.edit_text(text, reply_markup=get_main_menu())
    await callback.answer()

# –¥–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –∏–∑–±—Ä–∞–Ω–Ω–æ–º—É
@router.callback_query(F.data == "show_favorites")
async def go_to_favorites(callback: CallbackQuery):
    """–ø–µ—Ä–µ—Ö–æ–¥ –∫ –∏–∑–±—Ä–∞–Ω–Ω–æ–º—É"""
    favorites = await get_favorites(callback.from_user.id)
    
    if not favorites:
        text = "ü§∑‚Äç‚ôÄÔ∏è —É –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤\n\n–Ω–∞–π–¥–∏—Ç–µ —Ä–µ—Ü–µ–ø—Ç –∏ –¥–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ!"
        await callback.message.edit_text(text, reply_markup=get_main_menu())
    else:
        text = "‚≠ê <b>–≤–∞—à–∏ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã:</b>\n\n"
        text += "–≤—ã–±–µ—Ä–∏—Ç–µ —Ä–µ—Ü–µ–ø—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:"
        from keyboards.inline import get_favorites_menu
        kb = get_favorites_menu(favorites)
        await callback.message.edit_text(text, reply_markup=kb)
    
    await callback.answer()